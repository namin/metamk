(load "mk2.scm")
(load "utils.scm")
(load "cycler.scm")
(load "meta.scm")
(load "matche.scm")
(load "ex-path.scm")
(load "test-check.scm")

(test-check "patho-cycler"
  (run* (q)
    (fresh (x y t)
      (== q `(,x ,y ,t))
      ((cycler patho-clause) `(patho ,x ,y) t)))
  '((a b ((patho a b)))
    (b c ((patho b c)))
    (c a ((patho c a)))
    (a c ((patho b c) (patho a c)))
    (c b ((patho a b) (patho c b)))
    (b a ((patho c a) (patho b a)))
    (a a ((patho c a) (patho b a) (patho a a)))
    (b b ((patho a b) (patho c b) (patho b b)))
    (c c ((patho b c) (patho a c) (patho c c)))))
